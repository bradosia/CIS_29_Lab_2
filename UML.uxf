<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2.0">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>414</x>
      <y>81</y>
      <w>441</w>
      <h>261</h>
    </coordinates>
    <panel_attributes>Parser
--
unsigned int fileSize
unsigned int filePos
unsigned int charWritten
unsigned int ignoreNum
char bufferInChar[2]
char bufferOutChar[2]
char spaceChar[2]
string streamBuffer
bool spaceWrite
--
Parser()
~Parser()
bool morseBinaryToChar(ifstream&amp; fileStreamIn, ofstream&amp; fileStreamOut)
bool bufferHandle()
string byteToBitString(char byteIn)
int bitStringFind(string space)
bool xmlParse(istream&amp; streamIn, XMLNode&amp; xmlDoc)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>351</x>
      <y>810</y>
      <w>351</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>MorseBinaryCharTable
--
vector&lt;string&gt; charIntToBinaryStringTable
vector&lt;char&gt; binaryIntToCharTable
const string dashBinary = "01"
const string dotBinary = "10"
--
MorseBinaryCharTable()
~MorseBinaryCharTable()
void buildBinaryIntToCharTable();
bool binaryIntToChar(unsigned int binaryInt, char&amp; charOut);</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>360</x>
      <y>648</y>
      <w>324</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>MorseBinary
--
unsigned int binaryInt
MorseBinaryCharTable binaryCharTable
--
MorseBinary(string morse)
~MorseBinary()
bool toChar(char&amp; charOut)
bool bitStringToInt(string morse, unsigned int&amp; intOut)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>333</y>
      <w>135</w>
      <h>333</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;350.0;130.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>522</x>
      <y>765</y>
      <w>27</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9</x>
      <y>315</y>
      <w>351</w>
      <h>126</h>
    </coordinates>
    <panel_attributes>FileHandler
--

--
FileHandler()
~FileHandler()
bool readLines(string fileName, ifstream&amp; fileStream)
bool writeLines(string fileName, ofstream&amp; fileStream)
bool close(ifstream&amp; fileStream)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>36</x>
      <y>36</y>
      <w>243</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>UML Diagram
Lab 2 - Containers and Regex
Code3of9 Symbology in XML Container
By: Branden Lee</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>9</x>
      <y>153</y>
      <w>351</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>HashTable&lt;class K, class T&gt;
--
vector&lt;pair&lt;K, T&gt;*&gt; table
const unsigned int insertAttempts = 5
--
HashTable();
HashTable(unsigned int size)
~HashTable()
bool insert(K key, T val)
T at(K key)
T atIndex(unsigned int index)
unsigned int hash(K key)
unsigned int hash(unsigned int key)
unsigned int size()</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
